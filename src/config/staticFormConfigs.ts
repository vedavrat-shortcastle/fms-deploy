import { FormFieldConfig } from '@/types/form';
import { FedType, FieldType, SupportedLanguages } from '@prisma/client';

export const AdminProfileFormConfig: FormFieldConfig[] = [
  {
    id: 'firstNameField',
    fieldName: 'firstName',
    displayName: 'First Name',
    placeholder: 'Enter First Name',
    fieldType: FieldType.TEXT,
    isMandatory: true,
    order: 1,
    validations: {
      minLength: 2,
      maxLength: 50,
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'lastNameField',
    fieldName: 'lastName',
    displayName: 'Last Name',
    placeholder: 'Enter Last Name',
    fieldType: FieldType.TEXT,
    isMandatory: true,
    order: 2,
    validations: {
      minLength: 2,
      maxLength: 50,
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'passwordField',
    fieldName: 'password',
    displayName: 'Password',
    placeholder: 'Enter New Password',
    fieldType: FieldType.PASSWORD,
    isMandatory: false,
    order: 3,
    validations: {
      minLength: 8,
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'middleNameField',
    fieldName: 'middleName',
    displayName: 'Middle Name',
    placeholder: 'Enter Middle Name',
    fieldType: FieldType.TEXT,
    isMandatory: false,
    order: 4,
    validations: {
      maxLength: 50,
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'nameSuffixField',
    fieldName: 'nameSuffix',
    displayName: 'Name Suffix',
    placeholder: 'Enter Name Suffix',
    fieldType: FieldType.TEXT,
    isMandatory: false,
    order: 5,
    validations: {
      maxLength: 10,
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'languageField',
    fieldName: 'language',
    displayName: 'Language',
    placeholder: 'Select Language',
    fieldType: FieldType.SELECT,
    isMandatory: true,
    order: 6,
    validations: {
      options: Object.values(SupportedLanguages),
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
];

export const federationOnboardingFormConfig: FormFieldConfig[] = [
  {
    id: 'firstNameField',
    fieldName: 'firstName',
    displayName: 'First Name',
    placeholder: 'Enter First Name',
    fieldType: FieldType.TEXT,
    isMandatory: true,
    order: 1,
    validations: {
      minLength: 2,
      maxLength: 50,
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'lastNameField',
    fieldName: 'lastName',
    displayName: 'Last Name',
    placeholder: 'Enter Last Name',
    fieldType: FieldType.TEXT,
    isMandatory: true,
    order: 2,
    validations: {
      minLength: 2,
      maxLength: 50,
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'emailField',
    fieldName: 'email',
    displayName: 'E-mail',
    placeholder: 'Enter E-mail',
    fieldType: FieldType.EMAIL,
    isMandatory: true,
    order: 3,
    validations: {
      maxLength: 50,
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'passwordField',
    fieldName: 'password',
    displayName: 'Password',
    placeholder: 'Enter Password',
    fieldType: FieldType.PASSWORD,
    isMandatory: true,
    order: 4,
    validations: {
      minLength: 8,
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'phoneNumberField',
    fieldName: 'phoneNumber',
    displayName: 'Phone Number',
    placeholder: 'Enter Phone Number',
    fieldType: FieldType.PHONE,
    isMandatory: true,
    order: 7,
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
];
export const federationDomainOnboardConfig: FormFieldConfig[] = [
  {
    id: 'typeField',
    fieldName: 'type',
    displayName: 'Type',
    placeholder: 'Select Type',
    fieldType: FieldType.SELECT,
    isMandatory: true,
    order: 1,
    defaultValue: FedType.NATIONAL,
    validations: {
      options: Object.values(FedType),
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'nameField',
    fieldName: 'name',
    displayName: 'Name',
    placeholder: 'Enter Name',
    fieldType: FieldType.TEXT,
    isMandatory: true,
    order: 2,
    validations: {
      maxLength: 10,
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'shortCodeField',
    fieldName: 'shortCode',
    displayName: 'Short Code',
    placeholder: 'Enter Short Code',
    fieldType: FieldType.TEXT,
    isMandatory: true,
    order: 3,
    validations: {
      maxLength: 10,
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'countryField',
    fieldName: 'country',
    displayName: 'Country',
    placeholder: 'Select Country',
    fieldType: FieldType.COUNTRY,
    isMandatory: true,
    order: 4,
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'languageField',
    fieldName: 'language',
    displayName: 'Language',
    placeholder: 'Select Language',
    fieldType: FieldType.SELECT,
    isMandatory: true,
    order: 5,
    defaultValue: SupportedLanguages.en,
    validations: {
      options: Object.values(SupportedLanguages),
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
  {
    id: 'domainField',
    fieldName: 'domain',
    displayName: 'Domain',
    placeholder: 'Enter Domain',
    fieldType: FieldType.TEXT,
    isMandatory: true,
    order: 6,
    validations: {
      maxLength: 50,
    },
    isHidden: false,
    isDisabled: false,
    isCustomField: false,
  },
];
